-- create tables
create table olp_teacher (
    id                            number         generated by default on null as identity
                                                 constraint olp_teacher_pk primary key,
    name                          varchar2(255)  not null,
    email                         varchar2(255)  not null unique,
    hire_date                     date           not null,
    row_version                   integer        not null,
    created_on                    date           not null,
    created_by                    varchar2(255)  not null,
    updated_on                    date           not null,
    updated_by                    varchar2(255)  not null )
/
create table olp_course (
    id                            number         generated by default on null as identity
                                                 constraint olp_course_pk primary key,
    teacher_id                    number         not null
                                                 constraint olp_course_teacher_fk
                                                 references olp_teacher ( id )
                                                 on delete cascade,
    name                          varchar2(255)  not null,
    description                   varchar2(4000),
    start_date                    date           not null,
    end_date                      date           not null,
    row_version                   integer        not null,
    created_on                    date           not null,
    created_by                    varchar2(255)  not null,
    updated_on                    date           not null,
    updated_by                    varchar2(255)  not null )
/
create table olp_student (
    id                            number         generated by default on null as identity
                                                 constraint olp_student_pk primary key,
    first_name                    varchar2(255)  not null,
    last_name                     varchar2(255)  not null,
    email                         varchar2(255)  not null unique,
    enrollment_date               date           not null,
    row_version                   integer        not null,
    created_on                    date           not null,
    created_by                    varchar2(255)  not null,
    updated_on                    date           not null,
    updated_by                    varchar2(255)  not null )
/
create table olp_student_course (
    id                            number         generated by default on null as identity
                                                 constraint olp_student_course_pk primary key,
    student_id                    number         not null
                                                 constraint olp_student_course_student_fk
                                                 references olp_student ( id )
                                                 on delete cascade,
    course_id                     number         not null
                                                 constraint olp_student_course_course_fk
                                                 references olp_course ( id )
                                                 on delete cascade,
    enrollment_date               date           not null,
    row_version                   integer        not null,
    created_on                    date           not null,
    created_by                    varchar2(255)  not null,
    updated_on                    date           not null,
    updated_by                    varchar2(255)  not null )
/
create table olp_exam (
    id                            number         generated by default on null as identity
                                                 constraint olp_exam_pk primary key,
    course_id                     number         not null
                                                 constraint olp_exam_course_fk
                                                 references olp_course ( id )
                                                 on delete cascade,
    name                          varchar2(255)  not null,
    exam_date                     date           not null,
    max_score                     number         not null,
    row_version                   integer        not null,
    created_on                    date           not null,
    created_by                    varchar2(255)  not null,
    updated_on                    date           not null,
    updated_by                    varchar2(255)  not null )
/
create table olp_grade (
    id                            number         generated by default on null as identity
                                                 constraint olp_grade_pk primary key,
    student_course_id             number         not null
                                                 constraint olp_grade_student_course_fk
                                                 references olp_student_course ( id )
                                                 on delete cascade,
    exam_id                       number         not null
                                                 constraint olp_grade_exam_fk
                                                 references olp_exam ( id )
                                                 on delete cascade,
    score                         number         not null,
    comments                      varchar2(4000),
    row_version                   integer        not null,
    created_on                    date           not null,
    created_by                    varchar2(255)  not null,
    updated_on                    date           not null,
    updated_by                    varchar2(255)  not null )
/

-- table indexes
create index olp_course_indx_1 on olp_course ( teacher_id )
/
create index olp_student_course_indx_1 on olp_student_course ( student_id )
/
create index olp_student_course_indx_2 on olp_student_course ( course_id )
/
create index olp_exam_indx_1 on olp_exam ( course_id )
/
create index olp_grade_indx_1 on olp_grade ( student_course_id )
/
create index olp_grade_indx_2 on olp_grade ( exam_id )
/

-- triggers
create or replace trigger olp_teacher_biu
    before insert or update
    on olp_teacher
    for each row
begin
    :new.updated_on := sysdate;
    :new.updated_by := coalesce(sys_context('APEX$SESSION','APP_USER'),user);
    if inserting then
        :new.row_version := 1;
        :new.created_on := :new.updated_on;
        :new.created_by := :new.updated_by;
    elsif updating then
        :new.row_version := nvl(:old.row_version, 0) + 1;
    end if;
end olp_teacher_biu;
/
create or replace trigger olp_course_biu
    before insert or update
    on olp_course
    for each row
begin
    :new.updated_on := sysdate;
    :new.updated_by := coalesce(sys_context('APEX$SESSION','APP_USER'),user);
    if inserting then
        :new.row_version := 1;
        :new.created_on := :new.updated_on;
        :new.created_by := :new.updated_by;
    elsif updating then
        :new.row_version := nvl(:old.row_version, 0) + 1;
    end if;
end olp_course_biu;
/
create or replace trigger olp_student_biu
    before insert or update
    on olp_student
    for each row
begin
    :new.updated_on := sysdate;
    :new.updated_by := coalesce(sys_context('APEX$SESSION','APP_USER'),user);
    if inserting then
        :new.row_version := 1;
        :new.created_on := :new.updated_on;
        :new.created_by := :new.updated_by;
    elsif updating then
        :new.row_version := nvl(:old.row_version, 0) + 1;
    end if;
end olp_student_biu;
/
create or replace trigger olp_student_course_biu
    before insert or update
    on olp_student_course
    for each row
begin
    :new.updated_on := sysdate;
    :new.updated_by := coalesce(sys_context('APEX$SESSION','APP_USER'),user);
    if inserting then
        :new.row_version := 1;
        :new.created_on := :new.updated_on;
        :new.created_by := :new.updated_by;
    elsif updating then
        :new.row_version := nvl(:old.row_version, 0) + 1;
    end if;
end olp_student_course_biu;
/
create or replace trigger olp_exam_biu
    before insert or update
    on olp_exam
    for each row
begin
    :new.updated_on := sysdate;
    :new.updated_by := coalesce(sys_context('APEX$SESSION','APP_USER'),user);
    if inserting then
        :new.row_version := 1;
        :new.created_on := :new.updated_on;
        :new.created_by := :new.updated_by;
    elsif updating then
        :new.row_version := nvl(:old.row_version, 0) + 1;
    end if;
end olp_exam_biu;
/
create or replace trigger olp_grade_biu
    before insert or update
    on olp_grade
    for each row
begin
    :new.updated_on := sysdate;
    :new.updated_by := coalesce(sys_context('APEX$SESSION','APP_USER'),user);
    if inserting then
        :new.row_version := 1;
        :new.created_on := :new.updated_on;
        :new.created_by := :new.updated_by;
    elsif updating then
        :new.row_version := nvl(:old.row_version, 0) + 1;
    end if;
end olp_grade_biu;
/

-- insert into olp_teacher
insert into olp_teacher (name, email, hire_date, row_version, created_on, created_by, updated_on, updated_by) 
values ('John Doe', 'john.doe@example.com', date '2020-01-15', 1, sysdate, 'admin', sysdate, 'admin')
/
insert into olp_teacher (name, email, hire_date, row_version, created_on, created_by, updated_on, updated_by) 
values ('Jane Smith', 'jane.smith@example.com', date '2019-03-22', 1, sysdate, 'admin', sysdate, 'admin')
/

-- insert into olp_course
insert into olp_course (teacher_id, name, description, start_date, end_date, row_version, created_on, created_by, updated_on, updated_by) 
values (1, 'Introduction to SQL', 'Learn the basics of SQL.', date '2023-01-10', date '2023-03-15', 1, sysdate, 'admin', sysdate, 'admin')
/
insert into olp_course (teacher_id, name, description, start_date, end_date, row_version, created_on, created_by, updated_on, updated_by) 
values (2, 'Advanced Java', 'Deep dive into Java programming.', date '2023-01-10', date '2023-03-15', 1, sysdate, 'admin', sysdate, 'admin')
/

-- insert into olp_student
insert into olp_student (first_name, last_name, email, enrollment_date, row_version, created_on, created_by, updated_on, updated_by) 
values ('Alice', 'Johnson', 'alice.johnson@example.com', date '2023-01-02', 1, sysdate, 'admin', sysdate, 'admin')
/
insert into olp_student (first_name, last_name, email, enrollment_date, row_version, created_on, created_by, updated_on, updated_by) 
values ('Bob', 'Brown', 'bob.brown@example.com', date '2023-01-02', 1, sysdate, 'admin', sysdate, 'admin')
/

-- insert into olp_student_course
insert into olp_student_course (student_id, course_id, enrollment_date, row_version, created_on, created_by, updated_on, updated_by) 
values (1, 1, date '2023-01-02', 1, sysdate, 'admin', sysdate, 'admin')
/
insert into olp_student_course (student_id, course_id, enrollment_date, row_version, created_on, created_by, updated_on, updated_by) 
values (1, 2, date '2023-01-02', 1, sysdate, 'admin', sysdate, 'admin')
/
insert into olp_student_course (student_id, course_id, enrollment_date, row_version, created_on, created_by, updated_on, updated_by) 
values (2, 1, date '2023-01-02', 1, sysdate, 'admin', sysdate, 'admin')
/

-- insert into olp_exam
insert into olp_exam (course_id, name, exam_date, max_score, row_version, created_on, created_by, updated_on, updated_by) 
values (1, 'Midterm Exam', date '2023-02-05', 100, 1, sysdate, 'admin', sysdate, 'admin')
/
insert into olp_exam (course_id, name, exam_date, max_score, row_version, created_on, created_by, updated_on, updated_by) 
values (2, 'Final Exam', date '2023-03-10', 100, 1, sysdate, 'admin', sysdate, 'admin')
/

-- insert into olp_grade
insert into olp_grade (student_course_id, exam_id, score, comments, row_version, created_on, created_by, updated_on, updated_by) 
values (1, 1, 85, 'Good performance', 1, sysdate, 'admin', sysdate, 'admin')
/
insert into olp_grade (student_course_id, exam_id, score, comments, row_version, created_on, created_by, updated_on, updated_by) 
values (2, 2, 90, 'Excellent performance', 1, sysdate, 'admin', sysdate, 'admin')
/
insert into olp_grade (student_course_id, exam_id, score, comments, row_version, created_on, created_by, updated_on, updated_by) 
values (3, 1, 78, 'Satisfactory', 1, sysdate, 'admin', sysdate, 'admin')
/
